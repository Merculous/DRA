@ iboot_p1.s
@
@ Copyright (c) 2021 - 2023 @ kok3shidoll
@
@


    .text
    .syntax    unified


    .arm
_entry:
    b    _entry


    .org    0x20000
    .arm
_sub_5ff20000:
    bx    lr


    .org    0x235b0
    .thumb
    .thumb_func
_decompress_lzss:
    bx    lr


    .org    0x34834
    .arm
_bcopy:
    bx    lr


    .org    0x35284
    .thumb
    .thumb_func
_disable_interrupts:
    bx    lr


    .org    0x47B60
    .thumb
    .thumb_func
_iboot_patch:
    ldr    r0, =0x5ff47B72          @ end point of _iboot_patch()
    ldr    r1, =0x44042a00          @ payload
    movs   r2, #0x44                @ payload_sz
    blx    _bcopy

    ldr    r0, =0xc04               @ main_task() ptr
    ldr    r1, =(0x5ff42a00 + 1)    @ payload_base
    str    r1, [r4, r0]

    b.n     _payload2


    .org    0x47E88
    .global _payload
    .thumb
    .thumb_func
_payload:
    ldr    sp, =0x5FFF8000
    bl     _disable_interrupts
    ldr    r4, =0x44000000

    ldr    r0, =0x5ff00000          @ could be 0, but we use explicit offset for iloader
    mov    r1, r4
    ldr    r2, =0x44dc0
    blx    _bcopy

    b.n    _iboot_patch

_payload2:
    @ accept unsigned images
    ldr    r0, =0x191e4
    ldr    r1, =0x60182000
    str    r1, [r4, r0]

    ldr    r0, =0x5ff48000          @ dst
    movs   r1, #0xfc                @ dst_sz
    ldr    r2, =0x5ff47d3c          @ nettoyeur
    movs   r3, #0xe3                @ nettoyeur_sz

    push   {r0}
    bl     _decompress_lzss
    blx    _sub_5ff20000
    mov    lr, r4
    pop    {pc}

.align    2


    .org    0x47ED4
_next:
    nop

.align    2
